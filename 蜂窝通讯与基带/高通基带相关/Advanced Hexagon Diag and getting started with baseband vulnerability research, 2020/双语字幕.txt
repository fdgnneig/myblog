[Music]
[音乐]

[Applause]
[鼓掌]

our next speaker
我们的下一位演讲者

alisa isage is an independent
alisa isage 是一名独立

vulnerability researcher and has a
漏洞研究员，在安全研究方面取得了

notable record
显着的

of security research achievements such
成就，

as the sierra day initiative silver
例如 2018 年 Sierra Day Initiative 银牌

bounty hunter award 2018.
赏金猎人奖。elisa

elisa is going to present her latest
将介绍她

research

on the qualcomm direct protocol which is
关于高通直接协议的最新研究 在

found

abundantly in qualcomm hexagon based
基于高通六角形的

cellular
蜂窝

modems alisa we're looking forward to
调制解调器中大量存在 alisa 我们期待

your talk now
您的演讲 现在

this is alice sh you're attending my
这是 alice sh 您正在参加我的

presentation advantagex abundance
演讲

at cows communication congress 2020
在 2020 年奶牛通信大会上的优势丰富

remote experience
远程体验

my main interest as an advanced
作为高级漏洞研究员，我的主要兴趣

vulnerability researcher

is complex system and hardened systems
是复杂系统 在

for the last 10 years i have been
过去的 10 年里，我一直在

researching
研究

various classes of software such as
各种类型的软件，例如

windows kernel browsers javascript
Windows 内核浏览器、JavaScript

engines
引擎，

and for the last three years i was
在过去的三年里，我

focusing mostly on hyper-resource
主要关注超资源

the project the project that i'm
项目，我

presenting today
今天介绍的项目

was a little side project that they made
有点小 他们

for destruction a couple of years ago
几年前为破坏而做的副项目，

the name of this talk advanced hexagon
这个演讲的名称高级六角形

diag is a bit of an understatement
诊断有点轻描淡写，

in the attempt to keep this talk a
试图让这个演讲

little bit

low key in the general internet
在一般互联网上保持低调，

because a big part of the talk will
因为演讲的很大一部分将

actually be
实际上致力于

devoted to a general vulnerability

research in basebands
基带中的一般漏洞研究，

but the primary focus of this talk is on
但本次演讲的主要焦点是

the hexagon diag
六边形诊断，

also known as qcdm qualcomm diagnostic
也称为 qcdm 高通诊断

manager
管理器，

this is a proprietary protocol developed
这是高通开发的专有协议，

by qualcomm for use in their base bands
用于其基带，

and it is included on all snapdragon
并且包含在所有 snapdragon 中

socks and

modem chips produced by qualcomm
由高通公司生产的袜子和调制解调器芯片

modern qualcomm chips run on a custom
现代高通芯片在

silicon with a custom
具有

instruction set architecture named qdsp6
名为 qdsp6 hexagon 的自定义指令集架构的定制芯片上运行，

hexagon

this is important because all the diet
这很重要，因为

handlers

that we will be dealing with are written
我们将处理的所有饮食处理程序都像我的演讲一样

in this
在这个

instruction set architecture
指令集架构中编写

as usual with my talks i have adjusted
我针对不同的观众调整了

the materials of this presentation
本次演示的材料，

for various audiences for the false

picture of audiences

specifically the first part of the
特别是演示的第一部分

presentation

is mostly specialized
主要是

for research directors and high-level
针对研究主管和高级

technical staff
技术人员，

and the last part is more deep technical
最后一部分是更深入的技术，

and it would be mostly interesting to
而且会很有趣 对于与

specialized vulnerability researchers

and

low-level programmers that somehow are

related to

this particular area
此特定领域相关的专业漏洞研究人员和低级程序员，

let's start from the top level overview
让我们从

of cellular technology this mind map
蜂窝技术的顶层概述开始，此思维导图

presents
提供了

a simplified view of various types of

entities that we
我们

have to deal with with respect to
必须处理的

basebands it's not a complete diagram of
基带方面的各种类型实体的简化视图 当然不是一个完整的图表，

course but
但

it only presents the classes of
它只呈现了

entities that exist in this
存在于该

play space also this
游戏空间中的实体类别，该

mind map is specific to the clean side
思维导图也特定于干净端

equipment
设备（

the user equipment and it completely
用户设备），并且它完全

omits
忽略了

any server side considerations which are

enrolled in their own

there exists quite a large number of
存在于其自身中的任何服务器端考虑因素 从用户的角度来看，

cellular protocols on the planet
地球上有相当多的蜂窝协议，

from the user perspective this is simple
这很简单，

this is usually the
这通常是

shirt name 3g 4g that you see on the
您在移动屏幕上看到的衬衫名称 3g 4g，

mobile screen

but in reality a this
但实际上，

simple name that generation name encodes
世代名称编码的这个简单名称

may encode several different
可能会在那里编码几种不同的

distinct technologies
不同技术 在

there are a few key points about solar

protocols that

are crucial to understand before

starting to
开始

approach this area the first one is the
接触这个领域之前，有几个关于太阳能协议的关键点需要理解，第一个是

concept of regeneration this is
再生的概念，这

simple this is simply the one g to g
很简单，这只是 g 到 g

and so on the generic name of a family
等等一系列协议的通用名称， 在

of protocols that are supported

at a particular generation generation is
特定一代上受支持 一代

simply a marketing name
只是一个营销名称，

it's for users it doesn't really have
它是针对用户的 它实际上没有

any
任何

strict technical meaning and generations
严格的技术含义，一代

represent the evolution of
代表了

cellular protocols in time
蜂窝协议的及时演变

the second most important thing about
关于蜂窝协议的第二个最重要的事情

cellular protocols is the air interface
是空中接口，

this is or uh the protocol which
这是或 呃，该协议

actually
实际上

this is the lowest level protocol which
是最低级别的协议，它

defines how exactly the
定义了

cellular signal signal is digitized
蜂窝信号信号如何准确地数字化

and read from the electromagnetic wave
和从电磁波中读取，

and how exactly the different players in
以及该领域的不同参与者如何准确地

this field

divide the space historically
划分空间，历史上

there existed two main implementations
存在

of this low level protocol tdma and cdma
这种低级别协议的两种主要实现 tdma和cdma

today means time division multiple
现在意味着时分多址，

access

which basically divides the entire
基本上将无线电频段

electromagnetic spectrum within the
内的整个电磁频谱划分

radio band

into time slots that are rotated in a
为时隙，这些时隙

round-robin manner

by various mobile phones
由各种移动电话以循环方式轮换，

so that they speak um in
以便它们

in turns the tdma was the
轮流说话，tdma

base for the jsm technology and
是 jsm技术和

gsm was the main protocol used on this
gsm是这个星球上很长一段时间使用的主要协议，

planet

for a long time another low-level
另一个低级

implementation is cdma
实现是cdma，

it was a little bit more complex from
它从一开始就有点复杂，

the beginning

it's decoded as co-division multiple
它被解码为共分多

access
址

and instead of dividing this picture by
，而不是将这张图片除以

in time slots and dividing the protocol
in 时隙和突发划分协议

in bursts

cdma uses solder random codes that are
cdma 使用分配

assigned to
给

mobile phones so that
移动电话的焊接随机代码，以便

this code can be used as an additional
该代码可以用作

randomizing mask against the modulation
针对调制协议的附加随机化掩码，

protocol

and multiple user equipments can talk on
并且多个用户设备可以在

the same frequency without interrupting
同一频率上通话而不会互相干扰

each other

notable here is that cdma was developed
这里是 cdma 是

by qualcomm and it was mostly used in
由高通开发的，主要在美国使用，

the united states

so at the level of 2g there were two
因此在 2g 级别有两个

main protocols gsm
主要协议 GSM

based on the tdma and cdma1 based on the
基于 tdma 和 cdma1 基于

sdma
sdma

the third generation of mobile protocols
第三代移动协议

this two branches of development were
这两个发展分支 继续，

continued

so gsm evolved into umts while cdma
因此 gsm 演变成 umts，而 cdma

won evolved into cma 2000. the important
演变成 cma 2000。这里重要的

point here is that umts have
一点是，umts

at this point already
此时已经

adopted the low-level air interface
采用了 cdma 的低级空中接口

protocol from the cdma
协议，

and eventually at the fourth generation
并最终在第四代

of protocols
协议中

these two branches of development come
这两个分支 开发

together to create the lte technology
共同创造了LTE技术，

and same for the 5g
对于5G来说也是如此，

this is a bit important for us as from
这对我们来说有点重要，因为从

the offensive perspective
进攻的角度来看，

because first of all all these
因为首先所有这些

technologies including the air
技术，包括空中

interfaces represent
接口，代表了

separate bits of
单独的

code with separate parsing algorithms
代码位，在底层固件中具有单独的解析算法，

within the basement firmware

and all of them are usually presented in
并且 所有这些通常都出现在

each basement regardless of which one do
每个地下室，无论

you actually use
您实际使用哪一个，

does your mobile provider actually
您的移动提供商实际上是否

support
支持

another important and non-obvious thing

from the office offensive security
从办公室进攻性安全

perspective here
角度来看的另一件重要且不明显的事情

is that because of this um evolutionary
是，由于这种嗯进化

development the protocols are not
发展，这些协议实际上并不

actually

completely distinct so if you think
完全不同，所以如果你考虑

about lte
一下LTE，

it is not a completely different
它并不是与GSM完全不同的

protocol from gsm but instead it is
协议，而是它

based largely on the same
很大程度上基于相同的

internal structures and in fact if you
内部结构，事实上，如果你

look at
看一下

specifications they some of them are
规范，其中一些

almost directly relevant the
几乎与

specifications of the gsm
GSM的规范直接相关

to g some of them are still directly
g 其中一些在某种程度上仍然与 LTE 直接

relevant
相关，

to some extent to lte this is also

important

when you start analyzing protocols from
当您开始从进攻性角度分析协议时，这一点也很重要。

the offensive perspective

the cellular protocols are structured
蜂窝协议以层中

in a nested way
嵌套的方式构建。

in layers layers
层

is the official terminology adopted by
是规范采用的官方术语，

the specifications

with the exception of level zero here i
但除外 零级这里我

just edit it for convenience
只是为了方便而编辑它，

but it's in the specifications layer
但它位于规范层中，

start from one and proceed to three

from the offensive perspective the most
从进攻的角度来看，从一开始到三级，最

interesting is level three
有趣的是三级，

as you can see from the screenshot of
正如您从规范的屏幕截图中看到的那样，

specifications

because it encodes most of the high
因为它编码了大部分

level protocol data such as
高级协议 例如

handling sms and gsm this is the parts
处理 sms 和 gsm 等数据，这是

of the protocol which actually contains
协议的一部分，实际上包含

interesting data structures with deal
处理 tlb 值等有趣的数据结构

with tlb values and so on

[Applause]
[鼓掌]

when people talk about attacking
当人们谈论攻击

basebands they usually mean
基带时，他们通常指的是通过无线方式

attacking basement over the air the
攻击地下室，

ota attacker which is definitely
OTA 攻击者是 绝对是

one of the most interesting but let's
最有趣的之一，但让我们

take a step back
退后一步，

and consider the entire big picture
考虑

of the basement ecosystem this diagram
地下室生态系统的整个大局，该图

presents
呈现了具有

unified view of

generalized architecture of a modern

basement

with attack surfaces
攻击面的现代地下室通用架构的统一视图

first of all there are two separate
首先，有两个独立的

distant processors
远程处理器，即

the ap application processor and the mp
ap 应用程序处理器 和 mp

mobile processor it may be in either a
移动处理器，它可能在

dsp
dsp

or another cpu usually there are two
或另一个 cpu 中，通常有两个

separate processors
独立的处理器

and each one of them runs a separate
，每个处理器都运行一个单独的

operating system
操作系统，

in case of the ap it may be android or
如果 ap 可能是 android 或

ios
ios，

and the baseband processor would run
基带处理器将运行

some sort of a real-time operating
某种类型 移动供应商提供的实时操作系统的

system provided by the

mobile vendor

important point here that on modern
重要一点是，在现代

implementations
实现中，

basement are usually protected by some
地下室通常受到

sort of secure execution environment
某种安全执行环境的保护，

maybe trust on androids or surface on
可能信任安卓或苹果设备上的表面，

apple

devices

which means that the privileged boundary
这意味着此处描述的特权边界

which is depicted here

on the left side is dual sided so
左侧是双面的，因此

even if you have kernel access to the
即使您具有对 Android 日志的内核访问权限，

android journal

you still are not supposed to be able to
您仍然不应该能够

read the memory of the
读取

baseband or somehow intersect with this
基带的内存或

operation at least on the model
至少在模型生产智能手机上以某种方式与此操作相交，

production smartphones

and the same goes around to the basement
并且同样的情况 到地下室，

which is not supposed to be able to
它不应该能够

access to

application processor directly so these
直接访问应用程序处理器，因此这

two
两个

are mutually distrusting entities
是彼此分离的相互不信任的实体，

that are separated from each other and

so there exists
因此存在

a privilege boundary which is which
一个特权边界，它

represents um
代表

attack surface

within the uh real-time operating
呃实时操作中的攻击面

systems there are three
系统中有三个

large attack surfaces starting from
大的攻击面，从右

right to left
到左，最

the rightmost gray box
右边的灰色框

represents the attack surface of the
代表蜂窝堆栈的攻击面，

cellular stacks

uh this this is the code which actually
呃，这是实际

parses the cellular protocols
解析蜂窝协议的代码，

it usually runs in several distant
它通常在几个远程实时操作系统任务中运行，

real-time operating system tasks

and this part of the
这个

attack surface handles all the layers of
攻击面的一部分处理协议的所有层，

the protocol

there is a huge amount of parsing that

happens here
这里发生大量的解析，

the second box represents various
第二个框代表各种

management protocols
管理协议，

the simplest one to think about is the
最简单的考虑是通用

at common protocol
协议，

it is still widely included in all
它仍然广泛包含在所有

basebands
基带中，

and it's even usually exposed in some
并且它是 甚至通常以某种

way to the
方式暴露给

application processor so you can
应用程序处理器，因此您

actually send some 80 commands to the
实际上可以向蜂窝女士发送大约 80 个命令，

cellular madam about a bit more
更

interesting is the
有趣的是

vendor-specific management protocols one
供应商特定的管理协议，其中之一

of them

is the direct protocol because the
是直接协议，因为

basements
地下室

modern basements are very complex so
现代地下室非常复杂，所以

vendors need
供应商需要

some sort of specialized protocol to
某种专门的协议来

enable configuration and diagnostics for
启用 oms 的配置和诊断（

the oms

in case of qualcomm for example diag is
在高通的情况下），例如 diag

just one of the many
只是

diagnostic protocols involved
涉及的众多诊断协议之一，

the third box is what i call the rto
第三个框是我所说的 rto

score
分数，

it is various core level functionality
它是各种核心级功能，

such as the code which implements the
例如 实现

interface to the application processor
应用程序处理器接口的代码

[Applause]
[掌声]

on the side of the application operating
在应用程序操作系统（

system

such as android there are also two
例如 android）方面，还有两个可

attack surfaces

that are attackable from the basement
从地下室进行攻击的攻击面，

the first one
第一个

is the peripheral drivers
是外围设备驱动程序，

because basement is a separate hardware
因为地下室是一个单独的硬件

peripheral so it requires some
外围设备，因此 它需要一些

specialized drivers
专门的驱动程序来

that handle i o and such things
处理 i o 等事情，

and the second one is thumb duck surf is
第二个是拇指鸭冲浪

represented with
由

various interface handlers because
各种接口处理程序表示，因为

the basement and
地下室和

the main operating system cannot
主操作系统无法

communicate directly
直接通信，

they use some sort of a specialized
它们使用某种专门的

interface to do that
接口来做到这一点，

in case of qualcomm this is shared
以防万一 高通这是共享

memory and so this
内存，因此这种

shared memory implementations are
共享内存实现

usually quite complex
通常非常复杂，

and they represent an antac an attack
它们代表了 antac 和

surface on the both sides
双方的攻击面

and finally the third piece of this
，最后该图的第三部分

diagram is in the lowest part
位于

i have depicted to create boxes
我所描述的最下面部分，以创建与以下

which are related to the trusted
相关的框 受信任的

execution environment
执行环境，

because typically madame modem runs
因为通常 Madame 调制解调器

as a draftlet in um in a secure
在安全环境中作为 um 中的 Draftlet 运行，

environment

so technically the attack surfaces that
因此从技术上讲，

exists within the truss zone or related
桁架区域内存在的或与其相关的攻击面

to it

also can be useful for basement
也可用于地下室

offensive research
攻击研究，

here we can distinguish at least two
在这里我们可以区分至少两个

large attack surfaces the first one is
大型攻击 第一个是

the

secure manager uh call handlers
安全管理器呃调用处理程序，

which is the core interface that handles
它是

calls from the application processor to
处理从应用程序处理器到

the draw zone
绘图区域的调用的核心接口，

and the second one are the trustlets
第二个是 trustlet，

the pieces of separate pieces of code

which are executed and protected by the
由桁架执行和保护的独立代码片段。

truss

on this diagram i have also added some
这张图我还添加了一些

information

about data codecs i'm not sure if they
关于数据编解码器的信息，我不确定它们是否

are supposed to be in the rs core
应该在 rs 核心中，

because these things are directly
因为这些东西可以直接

accessible from the cell
从单元

or stacks usually especially asn 1
或堆栈访问，通常特别是 asn 1

which i have seen some bugs
，我已经看到了一些可以

reachable from the over-the-air
从

interface

on this diagram i have shown some
这张图上的无线接口我已经展示了一些

example of vulnerabilities i'll i will
漏洞的例子，我

not discuss them in details
不会在这里详细讨论它们，

here since it's not the point of the
因为这不是演示的重点，

presentation

but at least the ones from the pontoon
但至少来自浮桥的漏洞

you can find the
你可以找到

write-ups on the internet
文章 在互联网上

[Applause]
[掌声]

to discuss baseband offensive tools and
讨论基带攻击工具和

approaches i have narrowed down the
方法，我已将上

previous diagram to just one attack
图缩小到只有一个攻击

surface
面，即

the off the air attack surface this is
非空中攻击面，这是

the attack surface which is represented

by
通过

parsing implementations of various
解析

cellular protocols inside the basement
地下室运行中的各种蜂窝协议的实现来表示的攻击面

operating system

and this is the attack surface that we
这是我们

can reach from
可以从

the air interface in order to accomplish
空中接口到达的攻击面，为了实现这一目标，

that

we need a
我们需要一个

transceiver such as software defined
收发器，例如软件定义的

radio or a mobile tester
无线电或移动测试仪，

which is able to talk the specific
它能够与

cellular protocol that we're planning to
我们计划攻击的特定蜂窝协议进行通信。

attack

the simplest way to accomplish this is
实现这一点的最简单方法是

use some sort of a software-defined
使用某种软件定义的

radio such as address research srp or
无线电，例如地址研究 SRP 或

blade rf
Blade RF，

and install open source implementation
并安装基站的开源实现，

of a base station such as open bts
例如 Open BTS

or open bsc the thing to note here
或 Open BSC。这里需要注意的

is that the software-based
是，基于软件的无线电

implementations
实现

actually lag behind the development of
实际上落后于技术的发展，

technologies

the implementations of gsm base stations
GSM 基站的实现

are very
已经非常

well established and popular such as
完善和流行，例如

open bts
开放式 bts，

and in fact when i tried to establish
事实上，当我尝试

bts with my user b it was quite simple
与我的用户 b 建立 bts 时，

for umds and lt there exist
对于 umds 来说非常简单，而且存在的

less number of software based
数量较少 基于软件的

implementations
实现，

and also there are more constraints on
而且对硬件也有更多的限制，

the hardware for example my model of the
例如，由于资源限制，我的

usurpy does not
篡夺模型不

support umts due to resource constraints
支持 umts，

and the most interesting thing here is
这里最有趣的是，

that there does not exist any
不存在任何

software-based implementation of the
基于软件的 cdma 实现。

cdma

that you can use to establish a base
用于建立基站，

station

this is uh so the random uh diagram
这是呃，所以其中

of one of the snapdragon ships there
一艘金鱼龙飞船的随机呃图

exists a huge amount of various
存在大量各种不同

models of snapdragons
型号的金鱼草，

this one i have chosen so randomly when
当

i was searching for some sort of
我搜索高通用于某种

visual diagram qualcomm used to include
视觉图表时，我随机选择了这个模型 之前在他们的营销材料中包含了

some high level diagrams of
一些架构的高级图表，

the architecture in their marketing

materials previously but
但

it seems that they don't do this anymore
似乎他们不再这样做了，

and this particular diagram is from a
这个特定的图表来自

technical specification of a particular
特定型号 820 的技术规范，

model 820

also this particular model of snapdragon
而且这个特定的 Snapdragon 模型

is

a bit interesting because it is the
有点有趣，因为它 是

first one that included the
第一个包含

artificial intelligence agent which is
人工智能代理的，它

also based on hexagon
也是基于六角形的，

for our purposes the main interest here
对于我们的目的来说，这里主要感兴趣的

are the processors
是处理器

[Applause]
[鼓掌]

majority of snapdragons include quite a
大多数金鱼草都包含相当

long list of processors
长的处理器列表，

there are at least four arm based cryo
至少有四个基于ARM的cryo

cpus that actually
cpu实际上

run the arm the the android
运行arm android

application operating system
应用程序操作系统，

then there are the adreno gpus and then
然后是adreno gpus，然后

there are several hexagons

on the most recent models there is not
在最新的型号上有几个六边形，不仅有

just one hexalone
一个六边形

processing unit but several of them and
处理单元，而且有几个，

they are called
它们分别

respectively to their purposes each one
根据各自的目的进行调用。

of them each one of this hexagon course
这个六边形课程中的每一个都

is responsible for handling a specific
负责处理特定的

functionality for example mdsp handles
功能，例如 mdsp 处理

modem
调制解调器

and runs their real-time operating
并运行其实时操作系统，

system

the adsp handles media and the cdsp
adsp 处理媒体，cdsp

handles compute
处理计算

[Applause]
[掌声]，

so the hexagons actually represent
因此六边形实际上代表了

around one half of the processing power
大约一半的处理能力

on modern snapdragons
在现代金鱼草上，

there are um there are two key
嗯，从硬件角度来看，六边形架构有两个关键

points about the hexagon architecture
点，

from the hardware perspective

first of all it is
首先，

hexagon is specialized to parallel
六边形专门用于并行

processing
处理

and so the first concept
，因此第一个概念

is variable sized instruction packets
是可变大小的指令包，

it means that the several instructions
这意味着多条指令

can execute
可以

simultaneously on in separate
在 在单独的

execution units
执行单元中

[Applause]
[掌声]

it also uses a hardware multithreading
它还使用硬件多线程

for the same
来实现相同的

purposes on the right side of the slide
目的，在幻灯片的右侧，这

here is some example of the
是六边形组件的一些示例，

hexagon assembly it is quite

funny at times this uh
有时非常有趣，呃

these curly brackets represent the
这些大括号代表

instructions that are executed

simultaneously
同时执行的指令

and these instructions must be
这些指令必须

compatible in order to
兼容，以便能够

be able to use the
使用

distinct processing slots
不同的处理槽

and then there is the funny.new notation
，然后有一个有趣的新符号，

which actually enables the instructions
它实际上使指令

to use both the old and the new value of
能够在同一指令周期内使用特定寄存器的旧值和新值

a particular register

within the same instruction cycle

this this provides quite a bit of
这在低级别上提供了相当多的

optimization on the low level
优化，

for more information i can direct you to
以获取更多信息，我可以引导您访问

the

hexagon specification a programmer's
六边形规范程序员

reference manual which is available from
参考手册，可以从

the qualcomm website
高通网站获得

[Applause]
[鼓掌]

[Music]
[音乐]

the concept of production fusing is

quite common

as i said previously it's a common
正如我所说，生产熔断的概念很常见 以前，

practice from mobile device vendors
移动设备供应商的常见做法是在

to lock down the devices before they
设备进入市场之前锁定设备，

enter the market

to prevent modifications and tinkering
以防止修改和修补，

and for the purposes of this locking
为了实现

down
锁定，

they usually there are several ways how
他们通常有多种方法来

this can be accomplished
实现，

usually various advanced diagnostic and
通常是各种高级诊断和

debugging functionalities
调试功能

are removed from either software or
从软件或

hardware or both
硬件或两者中删除，

it is quite common that these
很常见的是，这些

functionalities are only removed from
功能仅从软件中删除，

software

while the hardware remains here and in
而硬件保留在这里，在

such a
这种

case we will
情况下，我们

eventually the researchers will come up
最终将研究人员提出

with

their own software based implementation
他们自己的基于软件的实现

all this functionality as in case with
所有这些功能，如

some custom
一些自定义

ios kernel debuggers for example
ios 内核调试器的情况，例如，

in case of qualcomm there was at some
在高通的情况下，在某个

point a leaked
时候有一份泄露的

internal memo which discusses what
内部备忘录，其中讨论了

exactly they are doing
他们在

for production fusing the devices
生产融合设备方面到底做了什么，

in addition to production fusing
以及现代 Android 的生产融合，

in case of modern androids

the basement runs within the truss zone
地下室在桁架内运行 区域

and on my implementation it is already
，在我的实现中，它已经被

quite locked down
完全锁定，

it uses a separate component the
它使用一个单独的组件，

basement uses a separate component named
地下室使用一个名为 mba 的单独组件，

mba which stands from the modem basic
它来自调制解调器基本

authenticator
身份验证器，

and this entire thing is run by the
整个事情是由

subsystem of android kernel name peel
android 内核名称的子系统运行的，将

the peripheral image larger you can open
外围图像剥离更大你 可以打开

the source code
源代码

and investigate how exactly it looks
并研究它的外观，

and the purpose of the

mba is to authenticate the modern
mba 的目的是验证现代

firmware
固件，

so that you would not be able to inject
这样您就无法将

some arbitrary commas into the modern
一些任意逗号注入现代

firmware and flash it
固件并刷新它，

this is another side of the hardening so
这是强化的另一面，所以

which makes it very difficult to inject
这使得

any arbitrary code into the basement
向地下室注入任何任意代码变得非常困难，

basically the only way to do this is
基本上唯一的方法是

through a software vulnerability
通过

during this project i have reverse
这个项目期间的软件漏洞，我

engineered partially

the hexagon magnetic firmware from my
从我的 Nexus 6p 实现中对六边形磁性固件进行了部分逆向工程，

implementation

from my nexus 6p

the process of reverse engineering is
逆向工程的过程是

not very difficult
不是很困难

first of all you need to download the
首先，您需要

firmware from the website
从谷

the google's website for in this case
歌网站下载固件，在这种情况下，

then you need to find the binary which
然后您需要找到与

corresponds to the modem firmware
调制解调器固件相对应的二进制文件，

the this binary is actually a compound
该二进制文件实际上是一个复合二进制

binary
文件，

this corresponds that must be divided
该二进制文件对应于必须

into separate binaries that represent
分为 代表

specific

sections inside the

inside the firmware and for that purpose
固件内部特定部分的单独二进制文件，为此目的，

we can use the unifi trustlet script
我们可以在将

after you have split the basement
底层

firmware into separate sections you can
固件分成单独的部分后使用 unifi trustlet 脚本，您可以将

load them into either pro
它们加载到任一 pro 中，

there are several plugins available
有几个可用于

for eda pro that support hexagon
eda pro 的插件，支持 hexagon

i have tried one of them i think it was
我尝试过其中之一，我认为它是

gsmk
gsmk

and it works quite good for basic curves
，它对于基本曲线工程目的非常有效，

engineering purposes

notably here is that
特别是

some sections of the modern firmware are
现代固件的某些部分

compressed and relocated at runtime so
在运行时被压缩和重新定位，因此

you would not be able to
您将无法对

reverse engineer them unless you can
它们进行逆向工程，除非您可以

decompress them
解压缩它们，

which is also a bit of a challenge
这也是一个挑战，

because the qualcomm uses some internal
因为高通使用一些内部

compression
压缩

algorithm for that
算法进行

for the reverse engineering
逆向工程

uh the main approach here is to get
呃，这里的主要方法是

started with some root points for
从一些根点开始，

example because this is a real-time
例如，因为这是

operating system we know that it
我们知道的实时操作系统 它

should have some task structures and
应该有一些

test structures that we can locate and
我们可以找到的任务结构和测试结构，并且

from there we can
从那里我们可以

locate some interesting code in case of
找到一些有趣的代码（如果是

hexagon this is a bit non-trivial
六边形），这有点不简单，

because
因为

as i said it doesn't have any log
正如我所说，它没有任何日志

strings so even though
字符串，所以即使

you may locate something that looks like
您 可能会找到看起来像

a dust strut but
灰尘支柱的东西，但

it's not clear which code does it
不清楚它

actually represent so
实际上代表哪个代码，因此

the first step here is to apply the
第一步是应用

log strings that were removed from the

binary by q-shrink
通过 q-shrink 从二进制文件中删除的日志字符串，

the i think the only way to do it is by
我认为唯一的方法是 通过

using that
使用

mst underscore

txt file from the leaked sources this
泄露源中的 mst underscore txt 文件，该

file is not supposed to be available
文件不应

neither on the mobile devices nor in
在移动设备上或

some open
某些开放

ecosystem and after you have
生态系统中可用，并且在

applied this log strings you will create
应用此日志字符串后，您将创建

you will be able to rename some
您将能够重命名一些

functions
函数

and based on these log strings and
并基于 在这些日志字符串上，并且

because the log strings
因为日志字符串

often contain the names of the source
通常包含构建代码的源

file
文件

source module from which the code was
源模块的名称，

built

so it creates
所以它创造了

opportunity to understand what's what
机会了解

exactly this code is doing
该代码到底在做什么，

debugging was not was completely

unavailable in my case
在我的情况下调试并不是完全不可用，

and i realized that it would require
我意识到 这将需要

some a couple of months more work
几个月的工作

to make it work and
才能使其工作，

the the only way i think and the best
我认为唯一的方法也是最好的

way is to create a software-based
方法是创建一个基于软件的

debugger
调试器，

similar to modkit that the publication
类似于 modkit，

that i will
我

will be referencing in the references
将在基于参考文献中引用该出版物

based on software vulnerability in

either the modem itself
调制解调器本身

or in some authentic authenticator
或某些真实身份验证器

or in the trust zone so that we can
或信任区域中的软件漏洞，以便我们可以将

eject a software debugger callbacks into
软件调试器回调弹出到

the basement
地下室

and connect it to the gdp stop
并将其连接到 gdp 停止，

this is how the
这就是

part of the firmware looks that has the
具有日志的固件部分的样子

log string stripped out here
这里删除了字符串，

it's already has some names applied
它已经

using either script
使用任一脚本应用了一些名称，

so of course there was no such names
所以当然最初没有这样的名称，

initially only the hashes
只有

each one of the sessions represent a log
每个会话的哈希值代表一个日志

string
字符串，

that you can take in the from the
您可以从

message hash file
消息哈希文件中获取该日志字符串

and here is what you can get after you
，这就是您的内容 在

have applied
应用

the textual messages
文本消息并重

and rename some functions in this case
命名一些函数后可以得到，在这种情况下，

you would be able to find some hundreds
您将能够找到与 diax up 系统

of procedures that are directly related
直接相关的数百个程序，

to the diax up system

and in a similar way you can locate
并且以类似的方式，您可以找到与

various subsystems related to

over-the-air vectors as well
over-the 相关的各种子系统 -空气矢量也是如此，

but unfortunately majority of the auto
但不幸的是，大多数汽车

ota ventures are
OTA企业都位于

located in the segments that are not

immediately available in the firmware
固件中不能立即使用的部分，

the ones that are compressed and
这些部分被压缩和

relocated
重新定位，

meanwhile i have tried many different
同时我在这个项目期间尝试了许多不同的

things
东西，

during this project the things that

definitely worked
肯定有效的东西

is building the msm kernel
正在构建 msm 内核

there is nothing special about this just
没有什么特别之处，只是

a regular cross build
一个常规的交叉构建，

another common commonly well known
另一种常见的众所周知的

offensive approach is firmware
攻击方法是固件

downgrades when you
降级，当您

take some old firmware that contains a
使用一些包含

well-known security vulnerability
众所周知的安全漏洞的旧固件

and flash it and use the bug to create
并将其刷新并使用该错误来创建

an exploit to
漏洞时，固件降级

achieve some additional functionality or
实现一些额外的功能或

introspection into the system this part
对系统的内省这部分

definitely works
肯定有效

downgrades are trivial both on the
降级对于

entire
整个

firmware and the modem as well as the
固件和调制解调器以及

draw zone
绘图区域来说都是微不足道的

i did try to build a qualcomm firmware
我确实尝试

from the lead source codes
从

i assign just a few days to this task
我分配几天的主要源代码构建高通固件 这项任务

since it's not mission critical
因为它不是关键任务，

and i have run out of time probably
而且我已经用完了时间，可能

was different version of source codes
是不同版本的源代码，

but actually this is uh not a critical
但实际上这不是一个关键

project
项目，

because building a leaked firmware is
因为构建泄漏的固件与

not

directly relevant to find a new box in
在生产形式中找到新盒子没有直接关系，

the production form

so i just set it aside for some later
所以我 把它放在一边以供以后的

investigation
调查

i have also investigated the ram dumps
我至少在软件方面也调查了一点内存转储

ecosystem a little bit on the software
生态系统，

side at least and it seems that it's
它似乎

also fused quite reliably
也非常可靠地融合了

[Applause]
[鼓掌]

this is when i remembered about the
这是当我

qualcomm diag

during the initial recognitions i
在最初的识别期间想起高通诊断时 我偶然

stumbled on some white papers
发现了一些

and slides that mentioned the qualcomm
提到高通诊断协议的白皮书和幻灯片

diagnostic protocol

and it seemed like quite a powerful
，它似乎是一个非常强大的

protocol specifically with respect to
协议，特别是在

reconfiguring the baseband
重新配置基带方面，

so i decided to first of all to test it
所以我决定首先测试它，

in case that it would actually provide
以防它实际上提供

some advanced introspection
一些高级自省

functionality
功能

and then probably to use it to use the
然后可能使用它来使用

protocol

for enabling log dumps
启用日志转储的协议

qualcomm diag or qcdm
qualcomm diag 或 qcdm

is a proprietary protocol developed by
是由 qualcomm 开发的专有协议，

qualcomm with the purposes of
用于

advanced baseband software configuration
高级基带软件配置

and diagnostics
和诊断

it is mostly aimed for om developers
它主要针对 om 开发人员而

not for users
不是用户

the qualcomm direct protocol consists of
qualcomm direct 协议包括

around 200
大约 200 个

commons at least in theory that
公共资源，至少在理论上，

uh some of them are quite powerful on
呃，其中一些在纸面上非常强大，

paper such as
例如

downloader mode and read write memory
下载器模式和读写内存，

initially the diag
最初，diag

was partially reverse engineered around
在 2010 年左右进行了部分逆向工程，

2010

and included in the open source project
并包含在

named modem manager and then
名为调制解调器管理器的开源项目中，然后

it was also exposed in a presentation
它也被 在 guillain-barre 举办的 2011 年通信大会上的牛通信进展的演讲中暴露了

at the cow's communication progress uh

caused communication congress 2011 by

guillain-barre

this uh i think this presentation
这个呃我认为这个演讲

popularized it
普及了它，

and this is the one that introduced me
这就是向我介绍

to this protocol
这个协议的那个演讲

unfortunately that presentation is not
不幸的是这个演讲

really

relevant majority of it to
与

modern production phones but it does
现代生产并不真正相关 手机，但它确实

provide a high level overview
提供了一个高层次的概述

and general expectation
和一般期望，

of what you will have to deal with

from the offensive perspective the
从攻击的角度来看，您将必须处理什么，

direct protocol
直接协议

represents a local attack vector from
代表从

the application processor to the
应用程序处理器到地下室的本地攻击向量，

basement

a common scenario of how it can be
它如何有用的常见场景

useful is
是

unlocking mobile phones which are locked
解锁 锁定

to a particular mobile career
到特定移动业务的手机

if we find a memory corruption
如果我们

vulnerability in direct protocol
在直接协议中发现内存损坏漏洞，

it may be possible to execute a code
则可以

directly on the
直接在

base band and change some material
基带上执行代码并更改一些材料

settings this is usually accomplished
设置，这通常是

historically through the 80 common
通过 80 个通用

handlers but
处理程序完成的，但

internal proprietary protocols are also
内部 专有协议也

very convenient for that
非常方便，因为

the second scenario how the diag
第二种情况下，诊断攻击的有用之处

offensive can be useful

is using it for
是使用它来

ejecting a software-based debugger
弹出基于软件的调试器，

if you can find a bug in dialogue that
如果您可以在对话中找到一个启用

enables

read write capability on the basement
地下室读写功能的错误，

you can eject some debugging hooks
您可以弹出一些调试挂钩

and eventually connect connected to a
并最终连接到

gdp stop
gdp stop，

so it enables to create a
这样

software-based debugger even when gtac
即使 gtac 不可用，它也可以创建基于软件的调试器

is not available

[Applause]

what has changed in diag in 10 years

based on some cursory investigation that

i did

first of all the original publication

mentioned

qualcomm baseband based on arm and with
基于arm和rex操作系统的高通基带

rex operating system all modern qualcomm
所有现代高通

basements are based on hexagon
地下室都是基于hexagon

as opposed to arm and the rex operating
而不是arm，并且rex操作系统

system was replaced with curt
被替换为curt，

which i think is still has some bits of
我认为它仍然有一些

rags but in general it's a different
破烂，但总的来说它是一个不同的

operating system
操作系统

majority of super powerful comments of
大多数 Diax 的超级强大注释（

diax such as downloader mode
例如下载器模式

and memory read write were removed
和内存读写）

at least on my device and also it does
至少在我的设备上被删除，而且它也不会

not

expose any immediately available
公开任何立即可用的

interfaces
接口（

such as usb channel i hear that it's
例如 USB 通道）我听说可以

possible to enable that

usb direct channel

by adding some special
通过添加一些特殊的功能来启用 USB 直接通道

boot properties
启动属性，

but usually it's not it wouldn't be
但通常不是它不可

available it shouldn't be expected to be
用，不应期望

available on all devices
在所有设备上都可用，

so these observations were based on my
因此这些观察结果基于我的

test device nexus 6p
测试设备 Nexus 6p

and this this should be around
，这应该是

medium level of hardening
中等级别的强化

more modern devices such as google
更现代的设备，例如 谷歌

pixels
像素，

the modern ones should be expected to be
现代的应该

even more hardened than that
比谷歌像素更坚固，

especially on the google side because
特别是在谷歌方面，因为

they take hardening very seriously
他们非常认真地对待强化，

as opposed to it on the other side of
而不是这张图片的另一边，

this picture

if you think about some
如果你想到一些

no-name modem sticks these things can be
无名调制解调器棒，这些东西可以

more open
更开放

and more easy to investigate
，更容易研究

the niacc implementation architecture is
niacc 实现架构

relatively simple
相对简单

this diagram is based roughly on the
这个图大致基于

same diagram that i presented in the
我在演讲开始时展示的同一个图，

beginning of the talk

on the light side on the on the left

side there is the android kernel
左边是 android 内核，

and on the right side there is the
右侧是

basement operating system
地下室操作系统，

the protocol actually it works in both
该协议实际上在两侧都有效，它不仅是

sides it's not only commands

that can be sent by the application
可以由应用程序

processor to the basement but it's also
处理器发送到地下室的命令，而且也是

the messages that can be sent by the
可以由

basement to the application processor
地下室发送到应用程序处理器的消息，

so their commands are not really
因此它们的 命令并不是真正的

commands they're more like tokens
命令，它们更像是令牌，也

that also can be used to encode messages
可用于对消息进行编码。

the green arrows on this slide
这张幻灯片上的绿色箭头

represents an example
代表一个示例，这是一个

an example of a call flow of the data

flow

originating from the baseband and go
来自基带并

into the application processor
进入应用程序处理器的数据流调用流程的示例，

so obviously in case of commands there
非常明显 在命令的情况下，将

would be a reversible flow
存在可逆流

data flow
数据流操作系统

the main entity inside the operating
内部负责诊断的主要实体

system basement operating system
底层操作系统

responsible for diag is the direct task
是直接任务

it has a separate task
它有一个单独的任务

which handles specifically various
专门处理

operations related to the direct
与直接协议相关的各种操作以及

protocol

the the exchange of data between the
之间的数据交换

direct task and other tasks are done
直接任务和其他任务是

through the
通过

ring buffer so for example
环形缓冲区完成的，因此

if um if some tasks if some task needs
例如，如果某些任务需要

to

log log something through the diag
通过 diag 记录某些内容，

it will use um specialized login apis
它将使用专门的登录 api，

and it will in turn put logging data
然后将日志记录数据

into the ring buffer
放入环形缓冲区

the ring buffer will be drained either
环形缓冲区将

on timer or
在定时器或来自调用者的

on a software based interrupt from
基于软件的中断上耗尽，

from the caller and

at this point the data will be wrapped
此时数据将被包装

into dia protocol and from there it will
到 dia 协议中，从那里它将

go to
去

see your task this serial isle
查看您的任务，这个串行岛

which is responsible to sending the
负责发送

output
输出

to a specific interface
到特定接口，

this is based on the modem on the
这是基于底层配置上的调制解调器，

basement configuration

the main interface that i was dealing
我正在处理的主接口

with

is the shared memory which ends up in
是共享内存，最终位于

the

director driver

in inside the android kernel
android 内核内部的导向器驱动程序中，

so in case of sending the comments from
因此如果从

the android kernel to the basement it
android 内核发送注释 到地下室，这

will be the
将是

reverse flow the first you will need to
相反的流程，首先您需要

send some
发送一些数据

to craft the diet protocol data send it
来制作饮食协议数据，然后

through the actual driver
通过实际驱动程序将其

that will write to the shared memory
发送到共享内存

interface from there it will go to the
接口，从那里它将进入

specialized specialized task in the
地下室的专门任务

basement

and eventually end up in the direct task
最终以直接任务结束，

and
并且

potentially in other responsible tasks
可能在 Android 端的其他负责任务中结束。

on the android side diag is represented
diag

with the
由

dev diag device which is implemented
dev diag 设备表示，该设备

with the
由 msm 内核中的

director and dac forward kernel drivers
director 和 dac 前向内核驱动程序实现，

in the msm kernel

the purpose of the director driver is to
director 驱动程序的目的是

support the dioc interface
支持 dioc 接口

it is quite it's quite complex
确实如此，代码相当复杂，

in code but functionally it's quite
但功能非常

simple
简单，

it contains some basic minimum
它包含一些基本的最少

of direct comments that enable
直接注释，可以

configuration of the interface on the
在地下室侧配置接口

basement side

and then it would be able to multiplex
，然后能够将

the

the channel to either usb or memory
通道多路复用到 USB 或内存

device
设备

it also contains some
它还包含一些

ios details too for configuration
ios 详细信息，用于

that can be accessed from the android
可以从 android

user land
用户界面访问的配置

and finally the actual filters various
，最后实际过滤了

comments that it considers unnecessary
它认为不必要的各种评论，

this is a bit
这有点

important because when you will start
重要，因为当您开始

when you will try to do some tests and
时，您将尝试进行一些测试并

send some arbitrary
发送

comments through the deck interface you
通过甲板接口的一些任意评论，您将

would

be required to rebuild the temperature
需要重建温度

driver
驱动程序

to remove to remove this masking
以删除以删除此屏蔽，

otherwise your commands will not
否则您的命令将无法

make it to the basement side
到达核心的地下室一侧，

at the core the director driver is based
控制器驱动程序基于

on the

smd sharing memory device interface
smd 共享内存设备接口，

which is a core interface specific to
该接口是 特定于

qualcomm modem
高通调制解调器的核心接口，

so this is where the diag is the
因此这就是图表上的 diag 的位置，

director is on the diagram

the director driver itself is located in
director 驱动程序本身位于

the application
应用程序

os vendor specific drivers
操作系统供应商特定的驱动程序中

and then there is the
，然后

some shared memory implementation in the
在地下室中有一些共享内存实现来

basement that handles this
处理此问题

and the dioc implementation itself
和 dioc实现本身，

the actual driver is quite complex
实际的驱动程序

in code but the functionality is quite
在代码中相当复杂，但功能非常

simple
简单，

it does implement a handful of ictels
它确实实现了

that enable some configuration
一些ictels，这些ictels启用了一些配置

i i didn't check what exactly this
我没有检查这个

isotels are responsible for
isotels到底负责什么，因为

it exposes the dev device which is
它公开了可供读取的开发设备

available for reading and writing

however by default you are not able to
但是默认情况下，您无法

access the direct channel
访问

based on for this device because in
基于此设备的直接通道，因为

order to access it
为了访问它，

there is a direct switch login function
有一个直接切换登录功能，可以将

which

switches the channel to
通道切换到

that is used for dial communications
用于

on this screen there is several modes
在此屏幕上进行拨号通信的通道，有多种模式

listed but in practice only two of them
列出，但实际上只

are supported the usb mode
支持其中两个 USB 模式

and the memory device mode usb mode is
和内存设备模式 USB 模式是

the default
默认模式，

so which is why if you
这就是为什么如果您

just open the dev driver the device and
只是打开设备驱动程序并

try to read something from it it won't
尝试从中读取某些内容，它将无法

work
工作，

it's tied to usb and in order to
它会被束缚 到 USB 并为了

reconfigure it to use the
重新配置它以使用

memory device you need to send a special
存储设备，您需要发送一个特殊的

rctl code
rctl 代码，注意

notice the procedure name mask request
过程名称掩码请求

validate
验证，

which employs a quite a strict filtering
它对

on the dial commands that you try to
您尝试

send through this interface
通过此接口发送的拨号命令采用相当严格的过滤，

so it filters out basically everything
因此它会过滤 基本上除了

with the exception of some

basic requests

at the core director driver uses the
核心的一些基本请求之外，director 驱动程序使用

shared memory device to communicate with
共享内存设备与基带进行通信

the base band

the smd implementation is quite complex
smd 实现非常复杂，

it exposes smd read api
它公开了 smd 读取 api，

which is used by the actual for reading
实际使用该 API 来

the data from the shared memory
从共享内存读取数据 内存

one of the apis shared memory also
共享内存的一个api也对通道的

operates on the obstruction of channels
阻塞进行操作，这些通道

which are accessed through the
是通过

api named smd named open an edge
名为smd的api访问的，名为open an edge

so you can notice here that there are
所以你可以注意到这里有

some direct specific channels that can
一些直接可以打开的特定通道

be opened

[Applause]
[鼓掌]

now let's take a look at the smd
现在让我们看一下 在 smd

implementation this is a bit
实现中，这有点

important because a shared memory device
重要，因为共享内存设备

represents a part of the attack surface
代表

for escalation from the modem to the
从调制解调器升级到

application processor
应用程序处理器的攻击面的一部分，

this is a very important attack surface
这是一个非常重要的攻击面，

because if you just
因为如果您只是

achieve code execution on the basement
在地下室实现代码执行，那么

it's mostly useless
它几乎毫无用处

because it cannot access the
因为它无法访问

main operating system and in order to
主操作系统，为了

make it useful
使其有用，

you will need to chain them to create an
您需要将它们链接起来以创建一个

exploit chain
漏洞利用链，

and and one more exploit based on that
并且基于该块的另一个漏洞利用

block

with um privilege escalation from the
从

modem
调制解调器

to the application processor so shared
到应用程序处理器的权限升级，因此共享

memory device is one of the attack
内存设备 是针对此的攻击服务之一

services for this

the shared memory device is implemented
共享内存设备被实现

as um exposed my region
为 um 暴露我的区域

exposed by the qualcomm peripheral
由高通外设暴露

the specialized msn driver will map it
专门的 msn 驱动程序将映射它，

and here it's the name snam ram face
这里它是名称 snam ram 面对

the base of the shared memory region
共享内存区域的基础

the shared memory region is
共享内存区域 它

operates on the concepts of
基于条目和通道的概念进行操作，

entries and channels so it's partitioned
因此它被划分

in
为

distant parts that can be accessed
远程部分，可以

through the procedure smm get entry
通过过程 smm getentry 访问

and one of these entries is
这些部分，其中一个条目是

smam channel tbl which contains
smam 通道 tbl，它包含

the list of available channels

that can be opened from there we can
可以从那里打开的可用通道列表，我们

actually open the channels
实际上可以 在这个最初的研究项目中，打开通道

and use the shared memory interface
并使用共享内存接口，

during this initial research project it

wasn't my goal to

to research the entire qualcomm
研究整个高通

ecosystem
生态系统并不是我的目标，

so while i was preparing for this talk i
所以当我准备这次演讲时，我

have noticed
注意到

some more interesting things in the

source codes such as for example the
源代码中一些更有趣的事情，例如

specialized driver that handles um
处理 um

g tag my region which is presumably
g 标记我的区域的专用驱动程序，大概是

exposed by some qualcomm system on chips
由驱动程序中芯片上的某些高通系统公开的，

in the drivers this is mostly used read
这主要用于只读，

only

and i suppose that it will not really
我认为它不会真正

work

for writing but it's worth checking
用于写入，但可能值得检查，

probably

and now finally let's look at the
现在最后让我们看看 在

protocol itself one of the first things
协议本身，

that i noticed
我

when researching the diet protocol is
在研究饮食协议时注意到的第一件事是，

that it's actually used
它实际上

in a few places not only in lip qcd
在一些地方使用，不仅在 lip qcd 中，

a popular tool named snobsnitch can
一个名为 snobsnitch 的流行工具可以

enable protocol dumps solar
启用协议

protocol dubs on rooted devices
在 root 设备上转储太阳能协议配音，

and in order to accomplish this snoop's
以便 完成这个窥探的

niche sends a pack blob
利基通过直接接口将

of their comments to the mobile device
他们的评论的包blob发送到移动设备

through the direct interface

this block is normal is not documented
这个块是正常的没有记录

so it got me curious what exactly these
所以这让我很好奇这些

commands are doing
命令到底在做什么

but before we can look at the dump
但是在我们查看转储之前让我们

let's understand the protocol
了解协议

the diet protocol consists of around 200
Diet 协议由大约 200 个

of commons or tokens
公共或令牌组成，

some of them are documented in the open
其中一些已在开源中记录，

source

but not all of them so you can notice on
但不是全部，因此您可以在屏幕截图中注意到

the screenshots

some of the comments are missing and one
一些注释丢失，其中

of the missing comments is actually
丢失的注释之一实际上是

the token

92 in hexadecimal
十六进制的令牌 92

which represents a encoded
它表示编码的

hash log message
哈希日志消息，通用

the common format is quite simple
格式非常简单，

it's the base primitive
它是基本原语，

here is that direct token number 7e
这里是直接令牌编号 7e

it's not really a delimiter it's a
它并不是真正的分隔符，它是一个

separate guy comment
单独的注释

126 it's missing in the open source as
126 它在开源中丢失，正如

you can see here
您在这里看到的那样，

so the dial command is nested the outer
因此 dial 命令 嵌套，外层

layer

consists of the this wrapper of
由

seven e hexadecimal bytes then there is
七个 e 十六进制字节的包装器组成，然后是

the main command
主命令，然后

and then there is some variable length
是一些可变长度

data that can contain
数据，可以包含

even more subcommands this entire thing
更多子命令，这整个事情

is verified using the crc
是使用 crc 验证的，

and some bytes are escaped specifically
并且一些字节被专门转义为

as you can see on the snippet
你可以在代码片段中看到

one interesting thing about the diode
关于二极管协议的一个有趣的事情

protocol is that
是

it supports subsystem extensions
它支持子系统扩展

basically different subsystems in the
基本上不同的子系统在

basement can register their own direct
地下室可以注册它们自己的直接

system handlers arbitrary ones
系统处理程序任意的

and there is a special comment number 75
并且有一个特殊的注释号75

which simply forwards instructs the
它简单地转发指示

direct system to forward this command to
直接系统 将此命令转发到

the respective subsystem
相应的子系统，

and then it will be parsed there
然后它将在那里进行解析。

the there exists quite a large number of
存在相当多的

subsystems
子系统，

not all of them are documented and when
并非所有子系统都被记录下来，当

i started investigating this
我开始调查这个问题时，

i noticed that there actually exists a
我注意到实际上存在

diag substance of system
系统

and debugging subsystem the later one
和调试子系统的诊断内容 后来的一个

immediately interested me because
立即引起了我的兴趣，因为

i was hoping that it would enable some
我希望它能够

more advanced introspection through this
通过这个调试子系统实现一些更高级的内省，

debugging subsystem

but it turned out that the debugging
但事实证明调试

subsystem
子系统

is quite simple it only supported one
非常简单，它只支持一个

command
命令

inject crash
注入崩溃

[Applause]
[鼓掌]

so you can send a special direct command
所以你可以发送一个特殊的直接命令

that will inject the crash into the
这会将崩溃注入地下室

basement

i will talk later about this
我稍后会讨论这个

now let's take a look at specific
现在让我们看一下

examples of the dag protocol
dag 协议的具体示例

this is the annotated snippet of the
这是

blob of comments from snoop snitch
来自 snoop snitch 的注释块的注释片段

this blog actually consists of three
这个博客实际上由三个

large
大的

logical parts the first part is largely
逻辑部分组成 部分很大程度上

irrelevant
无关紧要，

it's a bunch of comments that request
它是一堆注释，请求

various informations from the baseband
来自基带的各种信息，

such as timestamp version and four build
例如时间戳版本和四个构建

id and so on
ID 等等，

the second bunch of comments
第二组注释

starts with a command number 73
以命令号 73 十六进制开头，

hexadecimal

this is the common log config
这是常见的日志配置，

this is the command which enables
这是命令 启用

protocol dumps and configures them
协议转储并配置它们，

and the third part of this blob starts
该 blob 的第三部分

with the command number 7d hexadecimal
以命令号 7d 十六进制开头，

this is the command x message config
这是命令 x 消息配置，

this is actually the command that
这实际上

is supposed to enable textual message
是应该启用文本消息

login
登录的命令，

except that in case of the snoop snitch
除了在监听告密的情况下

it disables all logging all together
它会禁用 所有日志记录都在一起

[Applause]
[掌声]

so how do actually cellular protocol
那么，蜂窝协议转储实际上是如何

dumps work
工作的，

in order to enable the solar protocol
为了启用太阳能协议

dumps we need
转储，我们需要

a direct command lock config number 73
一个直接命令锁定配置号 73

hexadecimal
十六进制，

it is partially documented in the lip
它部分记录在 lip qcdm 中，

qcdm

the structure of the packet would
数据包的结构将

contain the code
包含代码

and the subcomment would that would be
子注释将

set mask in this case
设置掩码，在这种情况下，

it also needs an equipment id which
它还需要一个与

corresponds to the

specific protocol that we want to dump
我们要转储的特定协议相对应的设备 ID，

and finally the masks that are applied
最后是用于

to

filter some parts of the dump
过滤转储某些部分的掩码，

this is relatively straightforward
这相对简单

and now the second command direct
，现在 第二个命令直接

command text message config
命令文本消息配置

this is the one which is supposed to
这是应该

enable
启用

textile message laws
纺织消息法的命令，

this the common format is undocumented
该通用格式未记录，

so let's take a closer look at it
所以让我们仔细看看它

the the comment
注释

consists of
由

a sub command in this case it's sub
一个子命令组成，在本例中它是子

comment number four
注释号四

the set mask and then there are two
设置掩码，然后有两个

16 bit integers
16 位整数

ssid start and end ssid is a subsystem
ssid start 和 end ssid 是子系统

id
id，与

which is not the same as the dioxide
二氧化硫系统不同，

systems

and the last one is the mask so
最后一个是掩码，因此

subsystem ids are used to filter the
子系统 id 用于

messages based on a specific subsystem
根据特定子系统过滤消息，

because the there is a huge amount of
因为 地下室有大量的

subsystems in the basement
子系统

and if all of them start logging this is
，如果所有子系统都开始记录，这将是

a huge amount of data so
大量的数据，因此

that provides this capability to filter
提供了这种功能来过滤

a little bit

to a specific subsystem that you're
您对

interested in

the the snippet of python code here
python 片段感兴趣的特定子系统 这里的代码

is an example how to enable textile
是一个示例，如何为所有子系统启用纺织

message logging
消息日志记录，

for all subsystems

you'll need to set the mask to all ones
您需要将掩码设置为所有子系统，根据

and this is quite a lot of logging in my
我的经验，这是相当多的日志记录

experience

[Applause]
[鼓掌]

now for parsing the incoming log
现在，为了解析传入的日志

messages there are two types of
消息，有两种类型

direct tokens both of them are
直接令牌中，它们都

undocumented
没有记录，

the first one is a legacy message number
第一个是遗留消息号

79
79

hexadecimal this is a simple ascii based
十六进制，这是一个简单的基于 ASCII 的

message
消息，

that arrives through the diag interface
通过 diag 接口到达，

so you can parse it quite
因此您可以非常直接地解析它，

straightforwardly

the second one is i called it the
第二个是我称之为

command log hash
命令日志哈希，

it's number 92 hexadecimal this is the
它是 数字 92 十六进制这是对

token which encodes

the log messages that contain of that
日志消息进行编码的令牌，该令牌

contain only the hashes
仅包含哈希值，

this is the one that if you have the
如果您有

message message
消息消息

dot txt file you can correspond the hash
点 txt 文件，您可以将

arrive that was arrived through this
通过此注释到达的哈希值

comment to the messages provided in the
与提供的消息相对应 在

text file and you can get the textual
文本文件中，您可以在

logs

on the lower part of the slide there are
幻灯片的下半部分获取文本日志，这两个命令都有

two examples of hexdumps
两个十六进制转储示例，

for both commands

both of them have a similar structure
它们都具有相似的结构，

first there are
首先有

four bytes that are essential the first
四个字节是必不可少的，第

one is the command itself
一个是命令本身，

and the third byte is quite interesting
第三个字节非常有趣，

is the number of arguments included
是包含的参数数量

next there is a 64-bit value of
接下来是 64 位时间戳值

timestamp

next there is the ssid value 16-bit
接下来是 ssid 值 16 位

some line number and
某些行号，

i'm not sure what is the next argument
我不确定下一个参数是什么

and finally after that there is either
，最后是 是纯文本的

a ascii encoded log string
ascii 编码日志字符串

in plain text or a hash
或

of the log string
日志字符串的哈希值，

and optionally there may be included
并且可以选择包含

some arguments
一些参数，

so in case of um the first legacy
因此在 um 第一个旧

command the arguments are included
命令的情况下，参数将包含在

before the log message
日志消息之前，

and in case of the second comment they
而在第二个注释的情况下，它们

are included after the

md5 hash of the log message at least in
至少在我的这个实现版本中包含在日志消息的 md5 哈希之后

my version of this implementation

[Applause]
[掌声]，

and this is a direct packet that enables
这是一个直接数据包，至少在理论上使

you
您

to inject a crash into the basement at
能够将崩溃注入地下室，

least in theory

because in my case it did not work
因为在我的情况下它不起作用

and by not working i mean that it did
，并且 我所说的不工作是指它对

simply nothing to the basement
地下室没有任何作用，

normally i would expect that on
通常我希望在

production device it should
生产设备上它应该

just rest at the base band you will not
只停留在基带上，你不会

get a garage dump or anything like that
得到车库垃圾场或类似的东西，

it's just just arrested so i suppose
它只是被逮捕了所以我想

that

it still should be working on some other
它仍然 应该在其他一些设备上工作，

devices so it's worthy of checking
所以值得检查一下，

there are a few types of crashes that

you can
您可以

request in this way
通过这种方式请求几种类型的崩溃

[Applause]
[掌声]

in order to accomplish this i needed a
为了实现这一点，我需要一个

very simple tool
非常简单的工具，

with basically two functions first
基本上有两个功能，首先是直接

direct easy access to the diac interface
轻松访问 diac 接口

ideally through some sort of python
理想地通过某种 python

shell and second
shell，其次

is the ability to read and parse data
是能够

with
使用

advanced log strings for that purpose i
高级日志字符串读取和解析数据，为此我

wrote a simple framework
编写了一个简单的框架，

that i named diag talk
我将其命名为 diag talk，

which is uh based directly on the dev
它直接基于

diag interface

in the android kernel and
android 内核中的 dev diag 接口 并

with a python harness
使用 python 线束，

so on the left side here is an example
因此左侧是

of some advanced parsing
一些

with some linked values and on the right
带有链接值的高级解析的示例，右侧

side here is the example of the advanced
是高级消息日志的示例，

message log

which includes the log strings
其中包括从中提取的日志字符串

that were extracted uh that were

stripped out from the

firmware the lock is quite fun
锁的固件非常有趣，

as i expected to be it has a lot of
正如我所期望的那样，它有很多

detailed data such as for example gps
详细的数据，例如 GPS

coordinates
坐标

and various attempts of the basement to
和地下室连接到不同通道的各种尝试，

connect to different channels

and i think it's quite useful for
我认为它对于

offensive research purposes it's even
进攻性研究目的非常有用，有时它甚至

contains sometimes
包含

raw pointers as you can notice on
正如您在屏幕截图中看到的那样，原始指针

screenshot

so in this project my conclusion was
所以在这个项目中我的结论是，

that

indeed i was reassured that
确实我确信

it was the right choice and hexagon
这是正确的选择，并且六边形

seems to be quite a challenging target
似乎是一个相当具有挑战性的目标

and it would probably need several more
，甚至可能需要

months of work to even begin to do some
几个月的工作才能开始做 一些

serious offensive work
严重的进攻性工作

i also started to think about writing a
我也开始考虑编写一个

software debugger
软件调试器，

because it seems to be the most
因为它似乎是

probably the most reliable way to
实现调试自省最可能最可靠的方法，

achieve a

debugging introspection and also i
而且我

noticed some black spaces
注意到该领域的一些黑色空间

in the field that may require future
可能需要

work

for qualcomm hexagon specifically there
高通六边形的未来工作

is a lot of things that
有很多事情

can be done
可以做，

for example you can take a look at other
例如，您可以查看其他

qualcomm proprietary diagnostic
高通专有诊断

protocols or which there are few
协议，或者有一些诸如

such as qmi for example i think they are
qmi 之类的协议，例如，我认为它们

lesser known than
比饮食协议更不为人所知，

diet protocol

and then there is a requirement to
然后需要

create a
创建

full system emulation based on camel at
至少对于某些芯片来说，基于camel的完整系统模拟

least for some

chips

and a big problem about the compiler
以及编译器的一个大问题，

which is a major obstacle to any serious
这是代码中任何严肃的静态分析的主要障碍，

static analysis in the code

and for the offensive research there are
对于进攻性研究，有

three large directions first one is
三个大方向，第一个是

enabling debugging
启用调试，

there are different ways for that for
有不同的方向 另一方面，

example software-based debugging
例如基于软件的调试

or bypassing jtag fusing on the other
或绕过 jtag 融合的方法

hand

next there are explorations of the of
接下来是对

the air
空中

attack vectors and the third one is
攻击向量的探索，第三个是

escalation from the basement to the
从地下室升级到

application processor these are the
应用处理器，这是

three large
三个大型

offensive research vectors and for the
攻击性研究向量和 对于

basements in general there also exists
一般的地下室来说，未来的工作也存在

some interesting
一些有趣的

directions of future work first of all
方向，首先是

the osmo combi it definitely
osmo Combi，它绝对

deserves some update
值得稍微更新一下，

a little bit it is the only one open
它是基带上唯一的一个

source implementation on baseband
开源实现，

and it is so outdated and
它已经过时了，

there is uh and it is based on some
有呃，它是 基于一些

really obscure hardwares
非常晦涩的硬件，

another problem here is that it doesn't
这里的另一个问题是，

there doesn't exist
不存在

any software-based cdma implementation
任何基于软件的 cdma 实现

elisa thank you very much for this nice
elisa 非常感谢您的精彩

talk
演讲，

um there are some questions from the
嗯，观众提出了一些问题，

audience so basically the first one is
所以基本上第一个是

a little bit of icebreaker do you use a
破冰小游戏 你使用

mobile phone and do you trust it
手机吗？你信任它吗？

no i don't really use a mobile phone
不，我真的不只用手机来

only for twitter
发推特，

does anyone still use mobile phones

nowadays
现在还有人使用手机吗？

well no idea ok
不知道，好吧，

another question concerns the other
另一个问题涉及其他

qualcomm chips do you did you have a
高通芯片，你做到了吗？ 看看

look at

the qualcomm wi-fi chipset
高通 Wi-Fi 芯片组，

as i mentioned during the talk i had
正如我在演讲中提到的那样，我

only one month
只有一个月的时间，

it was like a short recognizance project
这就像一个简短的确认项目，

so i didn't really have
所以我没有

time to investigate everything i did
时间调查所有我

notice that
注意到的

qualcomm socks have wi-fi chip which is
高通袜子有 Wi-Fi 芯片 它

also based on hexagon
也是基于六边形，

and more than that it also shares some
而且不仅如此，它还共享一些

all the same
相同的

low-level technical primitives so it's
低级技术原语，所以它

um

definitely worth looking but like to
绝对值得一看，但喜欢

investigate it in details
详细研究它，

okay okay thanks well then there is also
好吧好吧，谢谢，那么这里还有

a pretty
一个非常

technical question here so instead of
技术性的问题，所以相反 必须对

having to go through the rigorous

command checking for the direct card
直接卡驱动程序进行严格的命令检查，

driver

wouldn't it be possible to end map dev
是否有可能将映射开发内存结束

mem into user space process and
到用户空间进程并

send over commands directly so
直接发送命令，所以

it depends a little bit on what the goal
这在一定程度上取决于目标

is
是

okay so it really depends on your
什么，所以这实际上取决于 根据您

previous background and your goals
之前的背景和目标，

the point here is that by default the
这里的要点是，默认情况下，

director ecosystem does not allow
director 生态系统不允许

to send arbitrary data commands
发送任意数据命令，

so either way you will have to hack
因此无论哪种方式，您都必须破解

something
某些内容，

one way to hack this is to rebuild the
一种破解方法是重建

actual driver
实际的驱动程序，

so you would be able to send the
这样您就能够 例如，

commands directly through the
直接通过

app interface another way would be to
应用程序界面发送命令的另一种方法是

access the shared memory directly for
直接访问共享内存，

example

but i think it would be more complex
但我认为这会更复杂，

because the qualcomm shared memory
因为高通共享内存

implementation is quite complex so
实现非常复杂，所以

i think that the easiest way would be
我认为最简单的方法

actually to hack the director driver
实际上是破解 导演驱动程序

and use the dev direct interface voice
并使用开发直接接口语音

okay yeah thanks thanks
好吧，是的，谢谢，嗯，好吧，

um well is this there's one question
这是有一个问题，

um quickly to read out maybe you can
嗯，快速读出，也许你可以

make sense of it this is typically good
理解它，这对于手机来说通常是很好的

security for mobile phones
安全性，

so this
所以

level of hardening that i presented i
我提出的这种级别的强化我

think is around
认为是

medium level so usually production
中等水平左右，所以通常量产

phones are even more hardened
手机会更加坚固，

if you take a look at things like google
如果你看一下谷歌

pixel 5
Pixel 5

or the latest items they would be
或最新产品，它们会

even better harder than the one that i
比我

discussed
讨论的更好，

oh okay yeah thanks thanks then
哦，好吧，谢谢，

so it doesn't look like we have any more
所以它不会 不管怎样，我们似乎还有其他

questions left
问题，

anyway so if you want to get in contact
所以如果您想

with alisa
与 alisa 联系，

no problem there is the feedback
没问题，

tab below your video now at the moment
现在您的视频下方有反馈选项卡，

just drop your questions over there and
只需将您的问题放到那里，

that's a way to get in touch with elisa
这是与 elisa 联系的一种方式

urban that i would say we are done for
城市，我想说我们今天的会议已经结束了，

today for this session

thank you very very much elisa for this
非常感谢埃莉莎

really nice presentation once again
再次做了这个非常好的演讲，

of course and i'll transfer now over
当然，我现在将转到

to the herald news show
先驱新闻节目，

wow
哇

you
你

